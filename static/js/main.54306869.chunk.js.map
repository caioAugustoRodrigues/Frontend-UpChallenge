{"version":3,"sources":["components/carro/index.jsx","components/hud/index.jsx","components/game/index.jsx","components/menu/index.jsx","index.js","App.js"],"names":["Carro","lane","handleLane","isPlaying","id","className","HudUpper","countdown","setPlaying","handleChange","start","setStart","name","useState","countDown","setCountdown","startCount","setStartCount","userName","count","useEffect","setTimeout","seconds","clearInterval","then","Date","now","secondsRemaining","handlers","window","location","reload","play","setInterval","console","log","secondsLeft","Math","round","timer","Game","willPlay","setLane","setPlay","btnPlay","document","getElementById","classList","add","remove","lanes","laneLeft","newLane","laneRight","handleBtnCrash","resetGame","getLaneByKeyPress","event","key","addEventListener","posicao","onClick","Menu","setName","setNaming","onSubmit","preventDefault","htmlFor","type","minLength","maxLength","value","onChange","e","target","ReactDOM","render","React","onkeydown"],"mappings":"oKAEe,SAASA,EAAT,GAAkD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,UAE9C,OACI,yBAAKC,GAAG,QACJC,UAAS,UAAKH,EAAWD,GAAhB,yBACPE,EAAY,SAAW,MCLtB,SAASG,EAAT,GAAmF,IAK1FC,EAL2BJ,EAA8D,EAA9DA,UAAWK,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAAQ,EAC3DC,qBAD2D,mBACtFC,EADsF,KAC3EC,EAD2E,OAEzDF,qBAFyD,mBAEtFG,EAFsF,KAE1EC,EAF0E,KAGvFC,EAAWN,EAGbO,EAAQL,EA8FZ,OA5FAM,qBAAU,YACQ,IAAVV,KAOc,IAAdP,GACAkB,YAAW,WACPJ,EAAc,GAEdI,YAAW,WACPJ,EAAc,GAEdI,YAAW,WACPJ,EAAc,GAEVI,YAAW,WACPJ,EAAc,GACdR,IACAD,GAAW,GACXO,EAAa,IASzC,SAAeO,GAEXC,cAAchB,GAEd,IACMiB,EADMC,KAAKC,MACY,IAAVJ,EACfK,EAAmB,EAEjBC,EAAW,CACbT,MAAO,WACH,GAAGQ,GAAoB,EAInB,OAHAnB,GAAW,GACXe,cAAchB,QAatBc,YAAW,WACPQ,OAAOC,SAASC,WACjB,MAVHC,KAAM,cAcVzB,EAAY0B,aAAY,WACpBC,QAAQC,IAAIhC,GACZ,IAAMiC,EAAcC,KAAKC,OAAOd,EAAOC,KAAKC,OAAS,KACrDC,EAAmBS,EAGnBR,EAAST,QACTS,EAASI,OAITjB,EAAaqB,KACd,KAnDqBG,CAAM,MACP,OACR,OACJ,OACJ,KAxBH5B,GAAS,OA0Fb,oCACI,yBAAKN,UAAU,OACX,wBAAIA,UAAS,qBAAgBW,EAAa,EAAI,SAAW,KACrD,mBAnBhB,WACI,OAAIA,EAAa,EACNA,EAGA,KAcC,OAGJ,wBAAIX,UAAS,qBAAgBW,EAAa,EAAI,SAAW,KACpDG,GAGL,wBAAId,UAAU,aACTa,KC9GN,SAASsB,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,SAAU7B,EAAQ,EAARA,KAAQ,EAChBC,oBAAS,GADO,mBACzCV,EADyC,KAC9BK,EAD8B,OAExBK,mBAAS,GAFe,mBAEzCZ,EAFyC,KAEnCyC,EAFmC,OAGxB7B,mBAAS4B,GAHe,mBAGzCT,EAHyC,KAGnCW,EAHmC,KAShD,IAAMlC,EAAe,WACpB,IAAMmC,EAAUC,SAASC,eAAe,cAEpC3C,GACHyC,EAAQG,UAAUC,IAAI,WACtBJ,EAAQG,UAAUE,OAAO,YACzBzC,GAAYL,IACDA,IACXyC,EAAQG,UAAUC,IAAI,YACtBJ,EAAQG,UAAUE,OAAO,WACzBzC,GAAYL,KAIR+C,EAAQ,CACbC,SAAU,WACLhD,GAEHuC,EADAU,GAAoB,IAItBC,UAAW,WACNlD,GAEHuC,EADAU,GAAoB,KAMnBA,EAAUnD,EAmCd,SAASqD,IACR,IAAMV,EAAUC,SAASC,eAAe,cAEpC3C,IACHyC,EAAQG,UAAUE,OAAO,WACzBL,EAAQG,UAAUC,IAAI,YACtBvC,KAKF,SAAS8C,IACR1B,OAAOR,YAAW,WACjBqB,EAAQ,GACRlC,GAAW,GACX8C,MACE,KAGJ,SAASE,EAAkBC,GAC1B,IAAIC,EAAMD,EAAMC,IAEJ,cAARA,GAAuBvD,GAC1BuD,EAAMD,EAAMC,IACZR,EAAMC,YACY,eAARO,GAAwBvD,GAClCuD,EAAMD,EAAMC,IACZR,EAAMG,aACY,WAARK,IACVlD,GAAYL,GACZM,KAQF,OACC,qCALD,WACCoB,OAAO8B,iBAAiB,UAAWH,KAMlC,6BAASnD,UAAU,QAClB,yBAAKA,UAAS,sBAAiBF,EAAY,SAAW,KACrD,kBAACG,EAAD,CACAH,UAAWA,EACXK,WAAYA,EACZC,aAAc6C,EACd5C,MAAOsB,EACPrB,SAAUgC,EACV/B,KAAMA,IAGN,yBAAKP,UAAU,cACd,kBAACL,EAAD,CACAC,KAAMA,EACNC,WAxFL,SAAoB0D,GACnB,OAAOA,GACN,KAAK,EACL,MAAO,WAEP,KAAK,EACL,MAAO,QAEP,KAAK,EACL,MAAO,WAEP,KAAK,EAML,OALGzD,GACHK,GAAYL,GAEZoD,IACAb,EAAQ,GACD,eAEP,KAAM,EAMN,OALGvC,GACHK,GAAYL,GAEZoD,IACAb,GAAS,GACF,eAEP,QACA,MAAO,UA6DJvC,UAAWA,MAKb,yBAAKE,UAAU,kBACd,4BAAQA,UAAU,OAAOwD,QAASX,EAAMC,UACvC,uBAAG9C,UAAU,yBAGd,4BAAQA,UAAU,OAAOwD,QAASpD,GACjC,8BACC,uBAAGL,GAAG,aAAaC,UAAU,kBAI/B,4BAAQA,UAAU,OAAOwD,QAASX,EAAMG,WACvC,uBAAGhD,UAAU,6BC3GJyD,MAzCf,YAAqC,IAArBnB,EAAoB,EAApBA,QAASoB,EAAW,EAAXA,QAAW,EACNlD,mBAAS,IADH,mBACzBD,EADyB,KACnBoD,EADmB,KAShC,OACI,oCACA,6BAAS3D,UAAU,QACf,yBAAKA,UAAU,eACX,0BAAMA,UAAU,UAChB,0CAGJ,yBAAKA,UAAU,eACX,iCAAM,2CAAN,MAGJ,0BAAMA,UAAU,aAAa4D,SAlBhB,SAACR,GAClBA,EAAMS,iBACNH,EAAQnD,GACR+B,GAAQ,KAgBA,2BAAOwB,QAAQ,QACX,oCACA,2BACI/D,GAAG,cACHgE,KAAK,OACLC,UAAU,IACVC,UAAU,IACVC,MAAO3D,EACP4D,SAAU,SAAAC,GAAC,OAAIT,EAAUS,EAAEC,OAAOH,WAI1C,4BAAQlE,UAAU,SAAlB,mBC9BhBsE,IAASC,OAAO,mBCFD,WAAgB,IAAD,EACFC,YAAe,GADb,mBACvBpC,EADuB,KACbE,EADa,OAENkC,WAAe,IAFT,mBAEvBjE,EAFuB,KAEjBmD,EAFiB,KAwC1B,OACI,iBAdJ,WACI,OAAKtB,EAtBL,gCACI,gBAACD,EAAD,CACIC,SAAUA,EACV7B,KAAMA,KAQd,gCACI,gBAAC,EAAD,CACI+B,QAASA,EACTF,SAAUA,EACVsB,QAASA,OAoBjB,CAAee,UANnB,SAAgBrB,GACZvB,QAAQC,IAAIsB,EAAMC,UDlCV,MAASb,SAASC,eAAe,U","file":"static/js/main.54306869.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Carro({ lane, handleLane, isPlaying })  {\r\n\r\n    return (\r\n        <div id=\"carro\"\r\n            className={`${handleLane(lane)}\r\n            ${isPlaying ? 'tremer' : ''}`\r\n            }>\r\n        </div>\r\n    )\r\n}","import React, {  useState, useEffect } from \"react\";\r\n\r\nexport default function HudUpper({ isPlaying, setPlaying, handleChange, start, setStart, name }) {\r\n    const [countDown, setCountdown] = useState(); \r\n    const [startCount, setStartCount] = useState();\r\n    const userName = name;\r\n    \r\n    let countdown;\r\n    let count = countDown;\r\n\r\n    useEffect(() => {\r\n        if (start === true) {\r\n            handleTimer();\r\n            setStart(false);\r\n        }\r\n    })\r\n\r\n    function handleTimer() {\r\n        if (isPlaying === false) {  \r\n            setTimeout(() => {\r\n                setStartCount(3);\r\n        \r\n                setTimeout(() => {\r\n                    setStartCount(2);\r\n\r\n                    setTimeout(() => {\r\n                        setStartCount(1);\r\n\r\n                            setTimeout(() => {\r\n                                setStartCount(0);\r\n                                handleChange();\r\n                                setPlaying(true);\r\n                                setCountdown(20);;\r\n                                timer(20);\r\n                            }, 1000);\r\n                    }, 1000);\r\n                }, 1000);\r\n            }, 1000)\r\n        } \r\n    }\r\n\r\n    function timer(seconds) {\r\n        // clear any existing timers\r\n        clearInterval(countdown);\r\n\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        let secondsRemaining = 0;\r\n\r\n        const handlers = {\r\n            count: () => {\r\n                if(secondsRemaining <= 0) {\r\n                    setPlaying(false);\r\n                    clearInterval(countdown);\r\n                    showMenu();\r\n                    return;\r\n                }\r\n            },\r\n            play: () => {\r\n                if (isPlaying === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        function showMenu() {\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 3000);\r\n        }\r\n\r\n        \r\n        countdown = setInterval(() => {\r\n            console.log(isPlaying);\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            secondsRemaining = secondsLeft; \r\n            \r\n            // check if we should stop it!\r\n            handlers.count();\r\n            handlers.play();\r\n            \r\n            // display it\r\n            \r\n            setCountdown(secondsLeft);\r\n        }, 1000);\r\n    }\r\n\r\n    function StartCounter() {\r\n        if (startCount > 0) {\r\n            return startCount\r\n        } \r\n        else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    function Name(userName) {\r\n        return (\r\n            {userName}\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"hud\">\r\n                <h1 className={`hud__start ${startCount < 0 ? 'hidden' : ''}`}>\r\n                    <StartCounter />\r\n                </h1>\r\n\r\n                <h1 className={`hud__count ${startCount > 0 ? 'hidden' : ''}`}>\r\n                    {count}\r\n                </h1>\r\n\r\n                <h1 className=\"hud__name\">\r\n                    {userName}\r\n                </h1>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Carro from '../carro'\r\nimport HudUpper from '../hud';\r\n\r\nexport default function Game({ willPlay, name }) {\r\n\tconst [isPlaying, setPlaying] = useState(false);\r\n\tconst [lane, setLane] = useState(1);\r\n\tconst [play, setPlay] = useState(willPlay);\r\n\r\n\tfunction UserName() {\r\n\t\treturn name\r\n\t}\r\n\t\r\n\tconst handleChange = () => {\r\n\t\tconst btnPlay = document.getElementById('play-pause');\r\n\t\r\n\t\tif (isPlaying) {\r\n\t\t\tbtnPlay.classList.add('fa-play');\r\n\t\t\tbtnPlay.classList.remove('fa-pause')\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t} else if (!isPlaying) {\r\n\t\t\tbtnPlay.classList.add('fa-pause');\r\n\t\t\tbtnPlay.classList.remove('fa-play');\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t}\r\n\t}\r\n\r\n\tconst lanes = {\r\n\t\tlaneLeft: function() {\r\n\t\t\tif (isPlaying) {\r\n\t\t\t\tnewLane = newLane - 1;\r\n\t\t\t\tsetLane(newLane);\r\n\t\t\t}\r\n\t\t},\r\n\t\tlaneRight: function() {\r\n\t\t\tif (isPlaying) {\r\n\t\t\t\tnewLane = newLane + 1;\r\n\t\t\t\tsetLane(newLane);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet newLane = lane;\r\n\r\n\tfunction handleLane(posicao) {\r\n\t\tswitch(posicao) {\r\n\t\t\tcase 0:\r\n\t\t\treturn \"carro__l\";\r\n\r\n\t\t\tcase 1:\r\n\t\t\treturn \"carro\";\r\n\r\n\t\t\tcase 2:\r\n\t\t\treturn \"carro__r\";\r\n\r\n\t\t\tcase 3:\r\n\t\t\tif(isPlaying) {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\t}\r\n\t\t\tresetGame();\r\n\t\t\tsetLane(3);\r\n\t\t\treturn 'explosion__r';\r\n\r\n\t\t\tcase -1:\r\n\t\t\tif(isPlaying) {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\t}\r\n\t\t\tresetGame();\r\n\t\t\tsetLane(-1);\r\n\t\t\treturn 'explosion__l';\r\n\r\n\t\t\tdefault:\r\n\t\t\treturn 'carro';\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction handleBtnCrash() {\r\n\t\tconst btnPlay = document.getElementById('play-pause');\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\tbtnPlay.classList.remove('fa-play');\r\n\t\t\tbtnPlay.classList.add('fa-pause');\r\n\t\t\thandleChange();\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tfunction resetGame() {\r\n\t\twindow.setTimeout(() => {\r\n\t\t\tsetLane(1);\r\n\t\t\tsetPlaying(false);\r\n\t\t\thandleBtnCrash();\r\n\t\t}, 3000)\r\n\t}\r\n\r\n\tfunction getLaneByKeyPress(event) {\r\n\t\tlet key = event.key;\r\n\r\n\t\tif (key === 'ArrowLeft' && isPlaying) {\r\n\t\t\tkey = event.key;\r\n\t\t\tlanes.laneLeft();\r\n\t\t} else if (key === 'ArrowRight' && isPlaying) {\r\n\t\t\tkey = event.key;\r\n\t\t\tlanes.laneRight();\r\n\t\t} else if (key === 'Escape') {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\thandleChange();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction handleKeyDown() {\r\n\t\twindow.addEventListener('keydown', getLaneByKeyPress)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{handleKeyDown}\r\n\t\t\t<section className=\"game\">\r\n\t\t\t\t<div className={`game__canvas${isPlaying ? '--play' : ''}`}>\r\n\t\t\t\t\t<HudUpper \r\n\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\tsetPlaying={setPlaying}\r\n\t\t\t\t\thandleChange={handleBtnCrash}\r\n\t\t\t\t\tstart={play}\r\n\t\t\t\t\tsetStart={setPlay}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<div className=\"game__lane\">\r\n\t\t\t\t\t\t<Carro \r\n\t\t\t\t\t\tlane={lane}\r\n\t\t\t\t\t\thandleLane={handleLane}\r\n\t\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"game__controls\">\r\n\t\t\t\t\t<button className=\"icon\" onClick={lanes.laneLeft} > \r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-left\"></i>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className=\"icon\" onClick={handleChange}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<i id=\"play-pause\" className=\"fas fa-play\"></i>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className=\"icon\" onClick={lanes.laneRight}>\r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-right\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}","import React, { useState } from 'react';\r\n\r\nfunction Menu({ setPlay, setName }) {\r\n    const [name, setNaming] = useState(\"\")\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setName(name);\r\n        setPlay(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <section className=\"menu\">\r\n            <div className=\"menu__upper\">\r\n                <span className=\"upnid\"></span>\r\n                <p>Apresenta:</p>\r\n            </div>\r\n\r\n            <div className=\"menu__title\">\r\n                <h1>Up<span>Challenge</span>!</h1>\r\n            </div>\r\n            \r\n            <form className=\"menu__name\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\">\r\n                    <h2>Name</h2>\r\n                    <input \r\n                        id=\"player-name\" \r\n                        type=\"text\" \r\n                        minLength=\"4\" \r\n                        maxLength=\"4\"\r\n                        value={name} \r\n                        onChange={e => setNaming(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n                <button className=\"start\">Press Start</button>\r\n            </form>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import * as React from 'react';\nimport Game from './components/game';\nimport Menu from './components/menu';\n\nexport default function App() {\nconst [willPlay, setPlay] = React.useState(false);\nconst [name, setName] = React.useState(\"\");\n\n    function returnGame() {\n        return (\n        <>\n            <Game \n                willPlay={willPlay}\n                name={name}\n            /> \n        </>\n        )\n    }\n    \n    function returnMenu() {\n        return (\n        <> \n            <Menu \n                setPlay={setPlay} \n                willPlay={willPlay}\n                setName={setName}\n            />\n        </>\n        )\n    }\n\n    function HandleContent() {\n        if (!willPlay) {\n            return returnMenu();\n        } else {\n            return returnGame()\n        }\n    }\n\n    function getKey(event) {\n        console.log(event.key)\n    }\n    \n\n    return (\n        <HandleContent onkeydown={getKey} />\n    )\n}"],"sourceRoot":""}