{"version":3,"sources":["components/carro/index.jsx","components/hud/index.jsx","components/game/index.jsx","components/menu/index.jsx","index.js","App.js"],"names":["Carro","lane","handleLane","isPlaying","id","className","HudUpper","countdown","setPlaying","handleChange","start","setStart","useState","countDown","setCountdown","startCount","setStartCount","useEffect","setTimeout","seconds","clearInterval","then","Date","now","secondsRemaining","handlers","count","window","location","reload","play","setInterval","console","log","secondsLeft","Math","round","timer","Game","willPlay","setLane","setPlay","btnPlay","document","getElementById","classList","add","remove","handleBtnCrash","resetGame","newLane","lanes","laneLeft","laneRight","getLaneByKeyPress","event","key","addEventListener","posicao","onClick","Menu","handleName","handlePlay","startPlay","onSubmit","name","htmlFor","type","minLength","maxLength","pattern","ReactDOM","render","React","onkeydown"],"mappings":"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","file":"static/js/main.8461bd47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Carro({ lane, handleLane, isPlaying })  {\r\n\r\n    return (\r\n        <div id=\"carro\"\r\n            className={`${handleLane(lane)}\r\n            ${isPlaying ? 'tremer' : ''}`\r\n            }>\r\n        </div>\r\n    )\r\n}","import React, {  useState, useEffect } from \"react\";\r\n\r\nexport default function HudUpper({ isPlaying, setPlaying, handleChange, start, setStart }) {\r\n  const [countDown, setCountdown] = useState(); \r\n  const [startCount, setStartCount] = useState();\r\n\r\n    useEffect(() => {\r\n        if (start === true) {\r\n            handleTimer();\r\n            setStart(false);\r\n        }\r\n    })\r\n\r\n    function handleTimer() {\r\n        if (isPlaying === false) {  \r\n            setTimeout(() => {\r\n                setStartCount(3);\r\n        \r\n                setTimeout(() => {\r\n                    setStartCount(2);\r\n\r\n                    setTimeout(() => {\r\n                        setStartCount(1);\r\n\r\n                            setTimeout(() => {\r\n                                setStartCount(0);\r\n                                handleChange();\r\n                                setPlaying(true);\r\n                                setCountdown(20);;\r\n                                timer(20);\r\n                            }, 1000);\r\n                    }, 1000);\r\n                }, 1000);\r\n            }, 1000)\r\n        } \r\n    }\r\n\r\n    let countdown;\r\n    let count = countDown;\r\n    function timer(seconds) {\r\n        // clear any existing timers\r\n        clearInterval(countdown);\r\n\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        let secondsRemaining = 0;\r\n\r\n        const handlers = {\r\n            count: () => {\r\n                if(secondsRemaining <= 0) {\r\n                    setPlaying(false);\r\n                    clearInterval(countdown);\r\n                    showMenu();\r\n                    return;\r\n                }\r\n            },\r\n            play: () => {\r\n                if (isPlaying === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        function showMenu() {\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 3000);\r\n        }\r\n\r\n        \r\n        countdown = setInterval(() => {\r\n            console.log(isPlaying);\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            secondsRemaining = secondsLeft; \r\n            \r\n            // check if we should stop it!\r\n            handlers.count();\r\n            handlers.play();\r\n            \r\n            // display it\r\n            \r\n            setCountdown(secondsLeft);\r\n        }, 1000);\r\n    }\r\n\r\n    function StartCounter() {\r\n        if (startCount > 0) {\r\n            return startCount\r\n        } \r\n        else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"hud\">\r\n            <h1 className={`hud__start ${startCount < 0 ? 'hidden' : ''}`}>\r\n                <StartCounter />\r\n            </h1>\r\n            <h1 className={`hud__count ${startCount > 0 ? 'hidden' : ''}`}>\r\n                {count}\r\n            </h1>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Carro from '../carro'\r\nimport HudUpper from '../hud';\r\n\r\nexport default function Game({ willPlay }) {\r\n\tconst [isPlaying, setPlaying] = useState(false);\r\n\tconst [lane, setLane] = useState(1);\r\n\tconst [play, setPlay] = useState(willPlay);\r\n\r\n\tfunction handleLane(posicao) {\r\n\t\tswitch(posicao) {\r\n\t\t\tcase 0:\r\n\t\t\treturn \"carro__l\";\r\n\r\n\t\t\tcase 1:\r\n\t\t\treturn \"carro\";\r\n\r\n\t\t\tcase 2:\r\n\t\t\treturn \"carro__r\";\r\n\r\n\t\t\tcase 3:\r\n\t\t\tif(isPlaying) {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\t}\r\n\t\t\tresetGame();\r\n\t\t\tsetLane(3);\r\n\t\t\treturn 'explosion__r';\r\n\r\n\t\t\tcase -1:\r\n\t\t\tif(isPlaying) {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\t}\r\n\t\t\tresetGame();\r\n\t\t\tsetLane(-1);\r\n\t\t\treturn 'explosion__l';\r\n\r\n\t\t\tdefault:\r\n\t\t\treturn 'carro';\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleChange = () => {\r\n\t\tconst btnPlay = document.getElementById('play-pause');\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\tbtnPlay.classList.add('fa-play');\r\n\t\t\tbtnPlay.classList.remove('fa-pause')\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t} else if (!isPlaying) {\r\n\t\t\tbtnPlay.classList.add('fa-pause');\r\n\t\t\tbtnPlay.classList.remove('fa-play');\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleBtnCrash() {\r\n\t\tconst btnPlay = document.getElementById('play-pause');\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\tbtnPlay.classList.remove('fa-play');\r\n\t\t\tbtnPlay.classList.add('fa-pause');\r\n\t\t\thandleChange();\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tfunction resetGame() {\r\n\t\twindow.setTimeout(() => {\r\n\t\t\tsetLane(1);\r\n\t\t\tsetPlaying(false);\r\n\t\t\thandleBtnCrash();\r\n\t\t}, 3000)\r\n\t}\r\n\r\n\tlet newLane = lane;\r\n\r\n\tconst lanes = {\r\n\t\tlaneLeft: function() {\r\n\t\t\tif (isPlaying) {\r\n\t\t\t\tnewLane = newLane - 1;\r\n\t\t\t\tsetLane(newLane);\r\n\t\t\t}\r\n\t\t},\r\n\t\tlaneRight: function() {\r\n\t\t\tif (isPlaying) {\r\n\t\t\t\tnewLane = newLane + 1;\r\n\t\t\t\tsetLane(newLane);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getLaneByKeyPress(event) {\r\n\t\tlet key = event.key;\r\n\r\n\t\tif (key === 'ArrowLeft' && isPlaying) {\r\n\t\t\tkey = event.key;\r\n\t\t\tlanes.laneLeft();\r\n\t\t} else if (key === 'ArrowRight' && isPlaying) {\r\n\t\t\tkey = event.key;\r\n\t\t\tlanes.laneRight();\r\n\t\t} else if (key === 'Escape') {\r\n\t\t\tsetPlaying(!isPlaying);\r\n\t\t\thandleChange();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction handleKeyDown() {\r\n\t\twindow.addEventListener('keydown', getLaneByKeyPress)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{handleKeyDown}\r\n\t\t\t<section className=\"game\">\r\n\t\t\t\t<div className={`game__canvas${isPlaying ? '--play' : ''}`}>\r\n\t\t\t\t\t<div className=\"hud\">\r\n\t\t\t\t\t\t<HudUpper \r\n\t\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\t\tsetPlaying={setPlaying}\r\n\t\t\t\t\t\thandleChange={handleBtnCrash}\r\n\t\t\t\t\t\tstart={play}\r\n\t\t\t\t\t\tsetStart={setPlay}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"game__lane\">\r\n\t\t\t\t\t\t<Carro \r\n\t\t\t\t\t\tlane={lane}\r\n\t\t\t\t\t\thandleLane={handleLane}\r\n\t\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"game__controls\">\r\n\t\t\t\t\t<button className=\"icon\" onClick={lanes.laneLeft} > \r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-left\"></i>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className=\"icon\" onClick={handleChange}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<i id=\"play-pause\" className=\"fas fa-play\"></i>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className=\"icon\" onClick={lanes.laneRight}>\r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-right\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}","import React, { useState } from 'react';\r\n\r\nfunction Menu({ setPlay, willPlay }) {\r\n    const [name, handleName] = useState(0);\r\n\r\n    const handlePlay = {\r\n        startPlay: () => {\r\n            setPlay(true);\r\n        }\r\n    }\r\n\r\n    function handleNaming() {\r\n        let name = document.getElementById('player-name');\r\n\r\n        handleName(name);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <section className=\"menu\">\r\n            <div className=\"menu__upper\">\r\n                <span className=\"upnid\"></span>\r\n                <p>Apresenta:</p>\r\n            </div>\r\n\r\n            <div className=\"menu__title\">\r\n                <h1>Up<span>Challenge</span>!</h1>\r\n            </div>\r\n            \r\n            <form className=\"menu__name\" onSubmit={handleNaming}>\r\n                <label htmlFor=\"name\">\r\n                    <h2>Name</h2>\r\n                    <input id=\"player-name\" type=\"text\" minLength=\"4\" maxLength=\"4\" pattern=\"[A-Za-z0-9]\" />\r\n                </label>\r\n\r\n                <button className=\"start\" onClick={handlePlay.startPlay}>Press Start</button>\r\n            </form>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import * as React from 'react';\nimport Game from './components/game';\nimport Menu from './components/menu';\n\nexport default function App() {\n  const [willPlay, setPlay] = React.useState(false);\n\n  function returnGame() {\n    return (\n      <>\n      <Game willPlay={willPlay}/> \n      </>\n    )\n  }\n  \n  function returnMenu() {\n    return (\n      <Menu setPlay={setPlay} willPlay={willPlay}  />\n    )\n  }\n\n  function HandleContent() {\n    if (!willPlay) {\n     return returnMenu();\n    } else {\n      return returnGame()\n    }\n  }\n\n  function getKey(event) {\n    console.log(event.key)\n  }\n  \n\n  return (\n    <HandleContent onkeydown={getKey} />\n  )\n}"],"sourceRoot":""}